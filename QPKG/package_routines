######################################################################
# List of available definitions (it's not necessary to uncomment them)
######################################################################
###### Command definitions #####
#CMD_AWK="/bin/awk"
#CMD_CAT="/bin/cat"
#CMD_CHMOD="/bin/chmod"
#CMD_CHOWN="/bin/chown"
#CMD_CP="/bin/cp"
#CMD_CUT="/bin/cut"
#CMD_DATE="/bin/date"
#CMD_ECHO="/bin/echo"
#CMD_EXPR="/usr/bin/expr"
#CMD_FIND="/usr/bin/find"
#CMD_GETCFG="/sbin/getcfg"
#CMD_GREP="/bin/grep"
#CMD_GZIP="/bin/gzip"
#CMD_HOSTNAME="/bin/hostname"
#CMD_LN="/bin/ln"
#CMD_LOG_TOOL="/sbin/log_tool"
#CMD_MD5SUM="/bin/md5sum"
#CMD_MKDIR="/bin/mkdir"
#CMD_MV="/bin/mv"
#CMD_RM="/bin/rm"
#CMD_RMDIR="/bin/rmdir"
#CMD_SED="/bin/sed"
#CMD_SETCFG="/sbin/setcfg"
#CMD_SLEEP="/bin/sleep"
#CMD_SORT="/usr/bin/sort"
#CMD_SYNC="/bin/sync"
#CMD_TAR="/bin/tar"
#CMD_TOUCH="/bin/touch"
#CMD_WGET="/usr/bin/wget"
#CMD_WLOG="/sbin/write_log"
#CMD_XARGS="/usr/bin/xargs"
#CMD_7Z="/usr/local/sbin/7z"
#
###### System definitions #####
#SYS_EXTRACT_DIR="$(pwd)"
#SYS_CONFIG_DIR="/etc/config"
#SYS_INIT_DIR="/etc/init.d"
#SYS_STARTUP_DIR="/etc/rcS.d"
#SYS_SHUTDOWN_DIR="/etc/rcK.d"
#SYS_RSS_IMG_DIR="/home/httpd/RSS/images"
#SYS_QPKG_DATA_FILE_GZIP="./data.tar.gz"
#SYS_QPKG_DATA_FILE_BZIP2="./data.tar.bz2"
#SYS_QPKG_DATA_FILE_7ZIP="./data.tar.7z"
#SYS_QPKG_DATA_CONFIG_FILE="./conf.tar.gz"
#SYS_QPKG_DATA_MD5SUM_FILE="./md5sum"
#SYS_QPKG_DATA_PACKAGES_FILE="./Packages.gz"
#SYS_QPKG_CONFIG_FILE="$SYS_CONFIG_DIR/qpkg.conf"
#SYS_QPKG_CONF_FIELD_QPKGFILE="QPKG_File"
#SYS_QPKG_CONF_FIELD_NAME="Name"
#SYS_QPKG_CONF_FIELD_VERSION="Version"
#SYS_QPKG_CONF_FIELD_ENABLE="Enable"
#SYS_QPKG_CONF_FIELD_DATE="Date"
#SYS_QPKG_CONF_FIELD_SHELL="Shell"
#SYS_QPKG_CONF_FIELD_INSTALL_PATH="Install_Path"
#SYS_QPKG_CONF_FIELD_CONFIG_PATH="Config_Path"
#SYS_QPKG_CONF_FIELD_WEBUI="WebUI"
#SYS_QPKG_CONF_FIELD_WEBPORT="Web_Port"
#SYS_QPKG_CONF_FIELD_SERVICEPORT="Service_Port"
#SYS_QPKG_CONF_FIELD_SERVICE_PIDFILE="Pid_File"
#SYS_QPKG_CONF_FIELD_AUTHOR="Author"
#SYS_QPKG_CONF_FIELD_RC_NUMBER="RC_Number"
## The following variables are assigned values at run-time.
#SYS_HOSTNAME=$($CMD_HOSTNAME)
## Data file name (one of SYS_QPKG_DATA_FILE_GZIP, SYS_QPKG_DATA_FILE_BZIP2,
## or SYS_QPKG_DATA_FILE_7ZIP)
#SYS_QPKG_DATA_FILE=
## Base location.
#SYS_QPKG_BASE=""
## Base location of QPKG installed packages.
#SYS_QPKG_INSTALL_PATH=""
## Location of installed software.
#SYS_QPKG_DIR=""
## If the QPKG should be enabled or disabled after the installation/upgrade.
#SYS_QPKG_SERVICE_ENABLED=""
## Architecture of the device the QPKG is installed on.
#SYS_CPU_ARCH=""
## Name and location of system shares
#SYS_PUBLIC_SHARE=""
#SYS_PUBLIC_PATH=""
#SYS_DOWNLOAD_SHARE=""
#SYS_DOWNLOAD_PATH=""
#SYS_MULTIMEDIA_SHARE=""
#SYS_MULTIMEDIA_PATH=""
#SYS_RECORDINGS_SHARE=""
#SYS_RECORDINGS_PATH=""
#SYS_USB_SHARE=""
#SYS_USB_PATH=""
#SYS_WEB_SHARE=""
#SYS_WEB_PATH=""
## Path to ipkg or opkg package tool if installed.
#CMD_PKG_TOOL=
#
######################################################################
# All package specific functions shall call 'err_log MSG' if an error
# is detected that shall terminate the installation.
######################################################################
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is removed.
######################################################################

QPKG_NAME="RoonServer"
ROON_PKG_URL="http://download.roonlabs.com/builds/RoonServer_linuxx64.tar.bz2"
ROON_ARCHIVE="${ROON_PKG_URL##*/}"
ROON_OFFLINE_ARCHIVE="$SYS_PUBLIC_PATH/$ROON_ARCHIVE"

#PKG_PRE_REMOVE="{
#}"
#
#PKG_MAIN_REMOVE="{
#}"
#
PKG_POST_REMOVE="{

    ## Remove symlink of web interface, if it still exist

    RoonSymlink="/home/httpd/cgi-bin/qpkg/RoonServer"
    if [ -L $RoonSymlink ]; then
        "${CMD_RM}" "${RoonSymlink}"
    fi
}"
#
######################################################################
# Define any package specific initialization that shall be performed
# before the package is installed.
######################################################################
pkg_init(){

    # Roon Server in v2017-10-03 had not option to select the database location. So the path was not stored in the config file.
    # Instead v2017-10-03 used pre-defined shared folder(/share/RoonServer). This checks if this folder exists and stores it in the config file. 
    # So the user does not need to specify it manually, when upgrading from v2017-10-03.

    PREVERSION=$(${CMD_GETCFG} ${QPKG_NAME} Version -f ${SYS_QPKG_CONFIG_FILE})
    if [ "$PREVERSION" == "2017-10-03" ]; then
        if [ -d "/share/RoonServer/RoonServer" ] && [ -d "/share/RoonServer/RAATServer" ]; then
        ${CMD_LOG_TOOL} -t 0 -a "[${QPKG_NAME}] Storage location of previously installed Roon Server database has been set automatically."
        ${CMD_SETCFG} ${QPKG_NAME} DB_Path "/share/RoonServer" -f ${SYS_QPKG_CONFIG_FILE}

        fi
    fi

    ## Check if archive has been supplied on the public shared folder for offline installation. 
    ## This was added, as some users had issues to download the required RoonServer binaries.

    if [ -f "$ROON_OFFLINE_ARCHIVE" ]; then
        ONLINEINSTALL=false
        ROON_ARCHIVE="$ROON_OFFLINE_ARCHIVE"
        log "[${QPKG_NAME}] Performing offline installation with binary archive from Public share."
    else
        ONLINEINSTALL=true
    fi
}
#
######################################################################
# Define any package specific requirement checks that shall be
# performed before the package is installed.
######################################################################
#pkg_check_requirement(){
#}
#
######################################################################
# Define any package specific operations that shall be performed when
# the package is installed.
######################################################################

## Check for a different install URL in case of ALPHA or NIGHLTY installs
## If the user is a ALPHA or NIGHTLY tester, he can specify the URL for the installation here.
## It is checked, wether the URL starts with "http" and and ends with the same basename as the official url. 

if [ -f /share/RoonServer/ROON_DEBUG_INSTALL_URL.txt ]; then
    CUSTOM_INSTALL_URL=`"${CMD_CAT}" /share/RoonServer/ROON_DEBUG_INSTALL_URL.txt`
    if [ ${CUSTOM_INSTALL_URL:0:4} == "http" ]  && [ $(basename ${CUSTOM_INSTALL_URL}) == $(basename ${ROON_PKG_URL}) ]; then
        ROON_PKG_URL="${CUSTOM_INSTALL_URL}"
    fi
fi

pkg_pre_install(){
    ### keep current RoonServer binaries and prevent redownload
    if [ -d ${SYS_QPKG_DIR}/RoonServer ]; then
        newInstall=false
    else
        newInstall=true
    fi
}

pkg_install(){
    if  $newInstall; then
        if $ONLINEINSTALL; then
            "${CMD_WGET}" "${ROON_PKG_URL}"
            R=$?
            if [ $R -ne 0 ]; then
                err_log "Could not download binary archive from Roon Labs website. Please check your internet connection."
            fi
        fi
        
        "${CMD_TAR}" xjf "${ROON_ARCHIVE}" -C "${SYS_QPKG_DIR}"
        R=$?
        if [ $R -ne 0 ]; then
            err_log "Error while decompressing the .tar.bz2 archive."
        fi
    
        ## Removing downloaded file after extract
    
        "${CMD_RM}" -f "${ROON_ARCHIVE}"
    fi
    ## Creating required folders and setting permissions

    "${CMD_MKDIR}" -m 777 "${SYS_QPKG_DIR}"/tmp
    "${CMD_MKDIR}" -m 777 "${SYS_QPKG_DIR}"/id
    "${CMD_CHMOD}" -R 777 "${SYS_QPKG_DIR}"/web/tmp
}

pkg_post_install(){
    
    # Restructuring Database folder
    ROON_DB_PATH=$("${CMD_GETCFG}" "${QPKG_NAME}" DB_Path -f "${SYS_QPKG_CONFIG_FILE}")
    
    if [[ x$ROON_DB_PATH != "x" ]]; then
        if [ -d "${ROON_DB_PATH}" ] && [ -d "${ROON_DB_PATH}/RoonServer" ] && [ -d "${ROON_DB_PATH}/RAATServer" ] && [ ! -d "${ROON_DB_PATH}/RoonOnNAS" ]; then
            "${CMD_MKDIR}" -m 777 "${ROON_DB_PATH}/RoonOnNAS"
            "${CMD_MKDIR}" -m 777 "${ROON_DB_PATH}/RoonOnNAS/bin"
            "${CMD_MV}" "${ROON_DB_PATH}/RoonServer" "${ROON_DB_PATH}/RoonOnNAS/"
            "${CMD_MV}" "${ROON_DB_PATH}/RAATServer" "${ROON_DB_PATH}/RoonOnNAS/"
            [ -d "${ROON_DB_PATH}/RoonGoer" ] && "${CMD_MV}" "${ROON_DB_PATH}/RoonGoer" "${ROON_DB_PATH}/RoonOnNAS/"
            "${CMD_MKDIR}" -m 777 "${DB_Path}/RoonOnNAS/bin"
            # Move ffmpeg if it has been provided previously and make sure it is executable. Then remove previous bin directory
            [ -f "${SYS_QPKG_DIR}/bin/ffmpeg" ] && ${CMD_MV} "${SYS_QPKG_DIR}/bin/ffmpeg" "${ROON_DB_PATH}/RoonOnNAS/bin/" && "${CMD_CHMOD}" 755 "${ROON_DB_PATH}/RoonOnNAS/bin/ffmpeg" && ${CMD_RMDIR} "${SYS_QPKG_DIR}/bin"
        fi
    fi
    
    # Checking if required directories exist
    [ -d "${SYS_QPKG_DIR}/tmp" ] || "${CMD_MKDIR}" -m 777 "${SYS_QPKG_DIR}/tmp"
    [ -d "${SYS_QPKG_DIR}/id" ] || "${CMD_MKDIR}" -m 777 "${SYS_QPKG_DIR}/id"
    
    "${CMD_SETCFG}" "${QPKG_NAME}" BINARIES_URL "${ROON_PKG_URL}" -f "${SYS_QPKG_CONFIG_FILE}"
    "${CMD_SETCFG}" "${QPKG_NAME}" Force_Visible 1 -f "${SYS_QPKG_CONFIG_FILE}"
}
